colors = ['Red', 'Green', 'Blue']
neighbors = {
    'WA': ['NT', 'SA'], 'NT': ['WA', 'SA', 'Q'], 'SA': ['WA', 'NT', 'Q', 'NSW', 'V'],
    'Q': ['NT', 'SA', 'NSW'], 'NSW': ['SA', 'Q', 'V'], 'V': ['SA', 'NSW'], 'T': []
}

def is_valid(region, color, assignment):
    return all(assignment.get(n) != color for n in neighbors[region])

def backtrack(assignment):
    if len(assignment) == len(neighbors):
        return assignment
    region = next(r for r in neighbors if r not in assignment)
    for color in colors:
        if is_valid(region, color, assignment):
            assignment[region] = color
            result = backtrack(assignment)
            if result: return result
            del assignment[region]
    return None

solution = backtrack({})
print(solution if solution else "No solution found.")

